services:
    configuration:
        class: Disqontrol\Configuration\Configuration
        arguments:
            - %configuration%

    event_dispatcher:
        class: Symfony\Component\EventDispatcher\ContainerAwareEventDispatcher
        arguments:
            - '@service_container'

    disqontrol.command.list_queues:
        class: Disqontrol\Console\Command\ListQueuesCommand
        arguments:
            - '@configuration'
        tags:
            - { name: disqontrol.command }

    monolog_logger:
        class: Monolog\Logger
        arguments:
            - 'disqontrol'

    logger:
        class: Disqontrol\Logger\JobLogger
        arguments:
            - '@monolog_logger'
            - '@job_serializer'
            - '@event_dispatcher'

    disque_client_factory:
        class: Disqontrol\Disque\DisqueClientFactory
        arguments:
            - '@configuration'

    disque:
        class: Disque\Client
        factory:
            - '@disque_client_factory'
            - getClient

    job_factory:
        class: Disqontrol\Job\JobFactory
        arguments:
            - '@configuration'
            - '@logger'

    job_serializer:
        class: Disqontrol\Job\Serializer\JsonSerializer

    job_marshaller:
        class: Disqontrol\Job\Marshaller\JobMarshaller
        arguments:
            - '@job_factory'
            - '@job_serializer'

    add_job:
        class: Disqontrol\Disque\AddJob
        arguments:
            - '@disque'
            - '@job_marshaller'
            - '@logger'

    producer:
        class: Disqontrol\Producer\Producer
        arguments:
            - '@configuration'
            - '@event_dispatcher'
            - '@add_job'

    fail_job:
        class: Disqontrol\Disque\FailJob
        arguments:
            - '@disque'
            - '@add_job'
            - '@job_factory'
            - '@configuration'
            - '@logger'

    process_factory:
        class: Disqontrol\Dispatcher\Call\Cli\ProcessFactory

    cli_call_factory:
        class: Disqontrol\Dispatcher\Call\Factory\CliCallFactory
        arguments:
            - '@configuration'
            - '@job_serializer'
            - '@process_factory'

    php_call_factory:
        class: Disqontrol\Dispatcher\Call\Factory\PhpCallFactory
        arguments:
            - '@worker_factory_collection'

    isolated_php_call_factory:
        class: Disqontrol\Dispatcher\Call\Factory\IsolatedPhpCallFactory
        arguments:
            - '@cli_call_factory'
            - "@=service('configuration').getBootstrapFilePath()"

    call_factory:
        class: Disqontrol\Dispatcher\Call\Factory\CallFactory
        arguments:
            - '@cli_call_factory'
            - '@php_call_factory'
            - '@isolated_php_call_factory'

    job_router_factory:
        class: Disqontrol\Router\JobRouterFactory
        arguments:
            - '@configuration'
            - '@call_factory'
            - '@event_dispatcher'

    job_router:
        class: Disqontrol\Router\JobRouter
        factory:
            - '@job_router_factory'
            - getRouter

    exponential_backoff:
        class: Disqontrol\Dispatcher\Failure\ExponentialBackoff

    failure_strategy_collection:
        class: Disqontrol\Dispatcher\Failure\FailureStrategyCollection
        arguments:
            - '@configuration'

    job_dispatcher:
        class: Disqontrol\Dispatcher\JobDispatcher
        arguments:
            - '@job_router'
            - '@disque'
            - '@failure_strategy_collection'
            - '@process_control'
            - '@logger'

    # Synchronous services (jobs are processed right away, circumventing Disque)
    sync_failure_strategy_collection:
        class: Disqontrol\Dispatcher\Failure\FailureStrategyCollection
        arguments:
            - '@configuration'
        calls:
            - ['addFailureStrategy', ['@log_and_throw_away']]

    sync_dispatcher:
        class: Disqontrol\Dispatcher\JobDispatcher
        arguments:
            - '@job_router'
            - '@sync_failure_strategy_collection'
            - '@logger'

    # Failure strategies
    # Failure strategies with the tag "failure_strategy" will be automatically
    # registered in the failure_strategy_collection
    # See FailureStrategiesCompilerPass
    retry:
        class: Disqontrol\Dispatcher\Failure\RetryWithExponentialBackoff
        arguments:
            - '@fail_job'
            - '@exponential_backoff'
        tags:
            - { name: failure_strategy }

    retry_immediately:
        class: Disqontrol\Dispatcher\Failure\RetryImmediately
        arguments:
            - '@fail_job'
        tags:
            - { name: failure_strategy }

    # This failure strategy is only used in the synchronous mode. It has no tags
    # because we don't want to register it automatically as an available strategy.
    log_and_throw_away:
        class: Disqontrol\Dispatcher\Failure\LogAndThrowAway
        arguments:
            - '@logger'

    consumer:
        class: Disqontrol\Consumer\Consumer
        arguments:
            - '@disque'
            - '@job_marshaller'
            - '@job_dispatcher'
            - '@process_control'
            - '@job_serializer'
            - '@logger'

    consumer_command:
        class: Disqontrol\Console\Command\ConsumerCommand
        arguments:
            - '@configuration'
            - '@consumer'
            - '@process_control'
        tags:
            - { name: disqontrol.command }

    process_control:
        class: Disqontrol\ProcessControl\ProcessControl

    process_spawner:
        class: Disqontrol\Consumer\Process\ConsumerProcessSpawner
        arguments:
            - "@=service('configuration').getBootstrapFilePath()"
            - '@logger'

    autoscale_algorithm_factory:
        class: Disqontrol\Consumer\Autoscale\AutoscaleAlgorithmFactory

    process_group_factory:
        class: Disqontrol\Consumer\Process\ProcessGroupFactory
        arguments:
            - '@process_spawner'
            - '@autoscale_algorithm_factory'
            - '@logger'

    supervisor:
        class: Disqontrol\Supervisor\Supervisor
        arguments:
            - '@configuration'
            - '@process_control'
            - '@process_group_factory'
            - '@logger'

    supervisor_command:
        class: Disqontrol\Console\Command\SupervisorCommand
        arguments:
            - '@supervisor'
        tags:
            - { name: disqontrol.command }

    crontab_parser:
        class: Disqontrol\Scheduler\CrontabParser

    scheduler:
        class: Disqontrol\Scheduler\Scheduler
        arguments:
            - '@crontab_parser'
            - '@producer'
            - '@logger'

    scheduler_command:
        class: Disqontrol\Console\Command\SchedulerCommand
        arguments:
            - '@scheduler'
            - '@logger'
        tags:
            - { name: disqontrol.command }

    worker_factory_collection:
        class: Disqontrol\Worker\WorkerFactoryCollectionInterface
        factory: ['@disqontrol', getWorkerFactoryCollection]

    php_worker_executor:
        class: Disqontrol\Worker\PhpWorkerExecutor
        arguments:
            - '@job_serializer'
            - '@php_call_factory'
            - '@logger'

    run_php_worker_command:
        class: Disqontrol\Console\Command\WorkerCommand
        arguments:
            - '@php_worker_executor'
        tags:
            - { name: disqontrol.command }
